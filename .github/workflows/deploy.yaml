name: Deploy Lambda Function

on:
  push:
    branches:
      - dev
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Package Lambda function
        run: |
          zip -r lambda_function.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Deploy Lambda function for dev branch
        if: github.ref == 'refs/heads/dev'
        run: |
          LAYER_VERSION=$(aws lambda publish-layer-version --layer-name et_forecast_dependencies --zip-file fileb://layer.zip --query Version --output text)
          aws lambda update-function-configuration --function-name et_forecast_func_test --layers arn:aws:lambda:us-east-2:${{ secrets.AWS_ACCOUNT_ID }}:layer:et_forecast_dependencies:$LAYER_VERSION
          aws lambda update-function-code --function-name et_forecast_func_test --zip-file fileb://lambda_function.zip

      - name: Deploy Lambda function for main branch
        if: github.ref == 'refs/heads/main'
        run: |
          LAYER_VERSION=$(aws lambda publish-layer-version --layer-name et_forecast_dependencies --zip-file fileb://layer.zip --query Version --output text)
          aws lambda update-function-configuration --function-name et-forecast-func --layers arn:aws:lambda:us-east-2:${{ secrets.AWS_ACCOUNT_ID }}:layer:et_forecast_dependencies:$LAYER_VERSION
          aws lambda update-function-code --function-name et-forecast-func --zip-file fileb://lambda_function.zip

  create-layer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Create directory for layer
        run: |
          mkdir -p python/lib/python3.12/site-packages
          pip install -r requirements.txt -t python/lib/python3.12/site-packages/

      - name: Package layer
        run: |
          zip -r layer.zip python

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Publish layer
        id: publish_layer
        run: |
          LAYER_VERSION=$(aws lambda publish-layer-version --layer-name et_forecast_dependencies --zip-file fileb://layer.zip --query Version --output text)
          echo "::set-output name=layer_version::$LAYER_VERSION"

      - name: Add layer permissions
        run: |
          aws lambda add-layer-version-permission --layer-name et_forecast_dependencies --version-number ${{ steps.publish_layer.outputs.layer_version }} --statement-id public-access --action lambda:GetLayerVersion --principal "*"
